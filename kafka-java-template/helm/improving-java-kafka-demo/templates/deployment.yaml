apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  name: {{ .Values.service.name }}
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: {{ .Values.service.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.service.name }}
    spec:    
      containers:
      - image: {{ .Values.image.name }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        name: {{ .Chart.Name }}
        ports:
          - name: http
            containerPort: {{ .Values.service.internalPort }}
            protocol: TCP
        livenessProbe:
          httpGet:
            path: /customers
            port: {{ .Values.service.internalPort }}
          initialDelaySeconds: 10
          periodSeconds: 60
          timeoutSeconds: 1
        readinessProbe:
          httpGet:
            path: /customers
            port: {{ .Values.service.internalPort }}
          initialDelaySeconds: 10
          periodSeconds: 30
          timeoutSeconds: 1
        resources:
          limits:
            cpu: {{ .Values.resources.limits.cpu }}
            memory: {{ .Values.resources.limits.memory }}
          requests:
            cpu: {{ .Values.resources.requests.cpu }}
            memory: {{ .Values.resources.requests.memory }}
        env:
          ##############################
          # APPLICATION CONFIGURATIONS #
          ##############################
          - name: SPRING_PROFILES_ACTIVE
            valueFrom:
              configMapKeyRef:
                name: java-kafka-demo
                key: spring.profiles.active
          - name: SPRING_KAFKA_BOOTSTRAP_SERVERS
            valueFrom:
              configMapKeyRef:
                name: java-kafka-demo
                key: kafka.bootstrap_servers
          - name: SPRING_KAFKA_PROPERTIES_SCHEMA_REGISTRY_URL
            valueFrom:
              configMapKeyRef:
                name: java-kafka-demo
                key: kafka.schema_registry_servers

          
          {{- with .Values.kafkaSecretName }}                  
          ##############################
          # KAFKA SECRETS #
          ##############################
          - name: CLUSTER_API_KEY
            valueFrom:
              secretKeyRef:
                name: {{ . }}
                key: CLUSTER_API_KEY
          - name: CLUSTER_API_SECRET
            valueFrom:
              secretKeyRef:
                name: {{ . }}
                key: CLUSTER_API_SECRET
          - name: SR_API_KEY
            valueFrom:
              secretKeyRef:
                name: {{ . }}
                key: SR_API_KEY
          - name: SR_API_SECRET
            valueFrom:
              secretKeyRef:
                name: {{ . }}
                key: SR_API_SECRET
          {{ end }}